all:
  - water
  - earth
  - places
  - landuse
  - roads
  - buildings
  - pois
  - boundaries
  - transit
layers:
  water:
    template: water.jinja2
    start_zoom: 0
    geometry_types: [Point, MultiPoint, Polygon, MultiPolygon, LineString, MultiLineString]
    simplify_before_intersect: true
    simplify_start: 9
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.water_tunnel
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
    sort: TileStache.Goodies.VecTiles.sort.water
  earth:
    template: earth.jinja2
    start_zoom: 0
    geometry_types: [Point, MultiPoint, Polygon, MultiPolygon, LineString, MultiLineString]
    simplify_before_intersect: true
    simplify_start: 9
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
    sort: TileStache.Goodies.VecTiles.sort.earth
  places:
    template: places.jinja2
    start_zoom: 0
    geometry_types: [Point, MultiPoint]
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.place_ne_capital
      - TileStache.Goodies.VecTiles.transform.place_population_int
      - TileStache.Goodies.VecTiles.transform.calculate_default_place_scalerank
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
    sort: TileStache.Goodies.VecTiles.sort.places
  landuse:
    template: landuse.jinja2
    start_zoom: 4
    geometry_types: [Polygon, MultiPolygon, LineString, MultiLineString]
    simplify_start: 4
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.normalize_tourism_kind
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
    sort: TileStache.Goodies.VecTiles.sort.landuse
  roads:
    template: roads.jinja2
    start_zoom: 5
    geometry_types: [LineString, MultiLineString]
    simplify_start: 8
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.parse_layer_as_float
      - TileStache.Goodies.VecTiles.transform.road_classifier
      - TileStache.Goodies.VecTiles.transform.road_oneway
      - TileStache.Goodies.VecTiles.transform.road_abbreviate_name
      - TileStache.Goodies.VecTiles.transform.route_name
      - TileStache.Goodies.VecTiles.transform.normalize_aerialways
      - TileStache.Goodies.VecTiles.transform.normalize_cycleway
      - TileStache.Goodies.VecTiles.transform.add_is_bicycle_related
      - TileStache.Goodies.VecTiles.transform.road_trim_properties
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
      - TileStache.Goodies.VecTiles.transform.tags_remove
    sort: TileStache.Goodies.VecTiles.sort.roads
  buildings:
    template: buildings.jinja2
    start_zoom: 13
    clip_factor: 3.0
    geometry_types: [Point, MultiPoint, Polygon, MultiPolygon]
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.parse_layer_as_float
      - TileStache.Goodies.VecTiles.transform.building_height
      - TileStache.Goodies.VecTiles.transform.building_min_height
      - TileStache.Goodies.VecTiles.transform.synthesize_volume
      - TileStache.Goodies.VecTiles.transform.normalize_tourism_kind
      - TileStache.Goodies.VecTiles.transform.building_trim_properties
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
    sort: TileStache.Goodies.VecTiles.sort.buildings
  pois:
    template: pois.jinja2
    start_zoom: 9
    geometry_types: [Point, MultiPoint, Polygon, MultiPolygon]
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.add_iata_code_to_airports
      - TileStache.Goodies.VecTiles.transform.normalize_leisure_kind
      - TileStache.Goodies.VecTiles.transform.normalize_tourism_kind
      - TileStache.Goodies.VecTiles.transform.normalize_social_kind
      - TileStache.Goodies.VecTiles.transform.normalize_medical_kind
      - TileStache.Goodies.VecTiles.transform.add_state_to_stations
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.add_uic_ref
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
      - TileStache.Goodies.VecTiles.transform.remove_zero_area
      - TileStache.Goodies.VecTiles.transform.pois_kind_aeroway_gate
      - TileStache.Goodies.VecTiles.transform.make_representative_point
      - TileStache.Goodies.VecTiles.transform.height_to_meters
      - TileStache.Goodies.VecTiles.transform.pois_capacity_int
      - TileStache.Goodies.VecTiles.transform.elevation_to_meters
    sort: TileStache.Goodies.VecTiles.sort.pois
  boundaries:
    template: boundaries.jinja2
    start_zoom: 0
    geometry_types: [Polygon, MultiPolygon, LineString, MultiLineString]
    simplify_before_intersect: true
    simplify_start: 8
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.admin_level_as_int
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
  transit:
    template: transit.jinja2
    start_zoom: 5
    geometry_types: [LineString, MultiLineString, Polygon, MultiPolygon]
    transform:
      - TileStache.Goodies.VecTiles.transform.tags_create_dict
      - TileStache.Goodies.VecTiles.transform.tags_name_i18n
      - TileStache.Goodies.VecTiles.transform.add_uic_ref
      - TileStache.Goodies.VecTiles.transform.tags_remove
      - TileStache.Goodies.VecTiles.transform.add_id_to_properties
      - TileStache.Goodies.VecTiles.transform.detect_osm_relation
      - TileStache.Goodies.VecTiles.transform.route_name
      - TileStache.Goodies.VecTiles.transform.parse_layer_as_float
      - TileStache.Goodies.VecTiles.transform.remove_feature_id
    sort: TileStache.Goodies.VecTiles.sort.transit
post_process:
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/landuse.csv
    params:
      source_layer: landuse
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/roads.csv
    params:
      source_layer: roads
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/earth.csv
    params:
      source_layer: earth
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/boundaries.csv
    params:
      source_layer: boundaries
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/buildings.csv
    params:
      source_layer: buildings
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/transit.csv
    params:
      source_layer: transit
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: roads
      properties: [layer]
  - fn: TileStache.Goodies.VecTiles.transform.numeric_min_filter
    params:
      source_layer: buildings
      mode: any
      filters:
        13: { area: 1600, volume: 300000 }
        14: { area:  100, volume: 200000 }
        15: { area:  100, volume: 100000 }
  - fn: TileStache.Goodies.VecTiles.transform.intercut
    params:
      base_layer: roads
      cutting_layer: landuse
      attribute: kind
      target_attribute: landuse_kind
      cutting_attrs: { sort_key: 'sort_key', reverse: True }
  - fn: TileStache.Goodies.VecTiles.transform.exterior_boundaries
    params:
      base_layer: water
      start_zoom: 9
      prop_transform:
        kind: true
        id: true
        source: true
        boundary: "yes"
        area: true
      snap_tolerance: 0.125
  # have to do the water properties matching _after_ exterior boundaries
  # as it depends on having the "boundary: yes" property available.
  - fn: TileStache.Goodies.VecTiles.transform.csv_match_properties
    resources:
      matcher:
        type: file
        init_fn: TileStache.Goodies.VecTiles.transform.CSVMatcher
        path: spreadsheets/water.csv
    params:
      source_layer: water
      target_value_type: int
  - fn: TileStache.Goodies.VecTiles.transform.overlap
    params:
      base_layer: buildings
      cutting_layer: landuse
      attribute: kind
      target_attribute: landuse_kind
      cutting_attrs: { sort_key: 'sort_key', reverse: True }
  - fn: TileStache.Goodies.VecTiles.transform.admin_boundaries
    params:
      base_layer: boundaries
      start_zoom: 8
  - fn: TileStache.Goodies.VecTiles.transform.handle_label_placement
    params:
      layers:
        - landuse
        - water
        - earth
        - buildings
      location_property: mz_label_placement
      label_property_name: label_placement
      label_property_value: true
      label_where: >-
        'name' in properties or
        ('sport' in properties and properties.get('kind', 'rock') not in ('rock', 'stone'))
  - fn: TileStache.Goodies.VecTiles.transform.remove_duplicate_features
    params:
      source_layer: landuse
      end_zoom: 15
      property_keys: [name, kind]
      geometry_types: [Point]
      min_distance: 256.0
  - fn: TileStache.Goodies.VecTiles.transform.drop_features_where
    params:
      source_layer: water
      start_zoom: 9
      where: >-
        'label_placement' not in properties and kind in ('bay', 'strait', 'fjord')
  - fn: TileStache.Goodies.VecTiles.transform.drop_features_where
    params:
      source_layer: earth
      start_zoom: 0
      where: >-
        'label_placement' not in properties and kind in
        ('archipelago', 'island', 'islet', 'continent', 'valley', 'ridge')
  - fn: TileStache.Goodies.VecTiles.transform.generate_address_points
    params:
      source_layer: buildings
      start_zoom: 16
  - fn: TileStache.Goodies.VecTiles.transform.remove_duplicate_features
    params:
      source_layer: buildings
      end_zoom: 15
      property_keys: [name, kind]
      geometry_types: [Point]
      min_distance: 256.0
  - fn: TileStache.Goodies.VecTiles.transform.remove_duplicate_features
    params:
      source_layer: pois
      end_zoom: 15
      property_keys: [name, kind]
      geometry_types: [Point]
      min_distance: 256.0
  - fn: TileStache.Goodies.VecTiles.transform.drop_features_where
    params:
      source_layer: landuse
      start_zoom: 6
      where: >-
        properties.get('mz_is_building') is True
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: landuse
      start_zoom: 6
      properties: [mz_is_building]
  - fn: TileStache.Goodies.VecTiles.transform.merge_duplicate_stations
    params:
      source_layer: pois
      end_zoom: 15
  - fn: TileStache.Goodies.VecTiles.transform.normalize_station_properties
    params:
      source_layer: pois
  - fn: TileStache.Goodies.VecTiles.transform.rank_features
    params:
      source_layer: pois
      items_matching:
        kind: station
      rank_key: kind_tile_rank
  - fn: TileStache.Goodies.VecTiles.transform.rank_features
    params:
      source_layer: places
      items_matching:
        kind: [neighbourhood, microhood, macrohood]
      rank_key: kind_tile_rank
      start_zoom: 11
  - fn: TileStache.Goodies.VecTiles.transform.rank_features
    params:
      source_layer: pois
      items_matching:
        kind: [peak, volcano]
      rank_key: kind_tile_rank
      start_zoom: 9
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: places
      properties: [mz_n_photos]
      start_zoom: 11
  - fn: TileStache.Goodies.VecTiles.transform.remove_duplicate_features
    params:
      source_layers: [pois, landuse, buildings]
      end_zoom: 15
      property_keys: [name]
      geometry_types: [Point]
      min_distance: 64.0
  - fn: TileStache.Goodies.VecTiles.transform.copy_features
    params:
      source_layer: landuse
      target_layer: landuse_labels
      where:
        label_placement: yes
      geometry_types: [Point]
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: roads
      start_zoom: 0
      end_zoom: 14
      properties: [is_bridge, is_tunnel]
      where: >-
        (kind == 'path' and zoom < 15) or
        (kind in ['minor_road', 'major_road', 'highway', 'rail'] and zoom < 13)
  # drop all oneway tags below zoom 14 (i.e: zoom >= 15) for all types.
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: roads
      start_zoom: 0
      end_zoom: 14
      properties: [oneway]
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: roads
      start_zoom: 0
      end_zoom: 14
      properties: [name, ref, network]
      where: >-
        (kind == 'rail' and zoom < 15) or
        (kind == 'minor_road' and zoom < 14) or
        (kind == 'major_road' and zoom <  7) or
        (kind == 'highway' and zoom < 7)
  # this is a patch because we still want to drop name, network from major_road
  # features between zoom 7 and 10
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: roads
      start_zoom: 7
      end_zoom: 10
      properties: [name, network]
      where: >-
        kind == 'major_road'
  # this is a patch to get rid of name, but keep ref & network, for highways
  # when zoom < 11.
  - fn: TileStache.Goodies.VecTiles.transform.drop_properties
    params:
      source_layer: roads
      start_zoom: 7
      end_zoom: 10
      properties: [name]
      where: >-
        kind == 'highway'
  - fn: TileStache.Goodies.VecTiles.transform.merge_features
    params:
      source_layer: roads
      start_zoom: 8
      end_zoom: 15
  - fn: TileStache.Goodies.VecTiles.transform.update_parenthetical_properties
    params:
      source_layer: pois
      values: ['closed', 'historical']
      target_min_zoom: 17
      drop_below_zoom: 16
  - fn: TileStache.Goodies.VecTiles.transform.update_parenthetical_properties
    params:
      source_layer: buildings
      values: ['closed', 'historical']
      target_min_zoom: 17
      drop_below_zoom: 16
  - fn: TileStache.Goodies.VecTiles.transform.merge_features
    params:
      source_layer: transit
      start_zoom: 0
      end_zoom: 15
  # only keep all stations below z12, then cut it down to the top few.
  - fn: TileStache.Goodies.VecTiles.transform.keep_n_features
    params:
      source_layer: transit
      start_zoom: 9
      end_zoom: 11
      items_matching: { kind: station }
      max_items: 20
  - fn: TileStache.Goodies.VecTiles.transform.keep_n_features
    params:
      source_layer: transit
      start_zoom: 12
      end_zoom: 13
      items_matching: { kind: station }
      max_items: 30
  - fn: TileStache.Goodies.VecTiles.transform.keep_n_features
    params:
      source_layer: pois
      start_zoom: 9
      end_zoom: 15
      items_matching: { kind: [peak, volcano] }
      max_items: 5
